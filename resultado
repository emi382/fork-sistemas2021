Inspecting 36 files
CWCCCCCCCCCCCCCCCCCCCWCCCCWCCWWWWWWC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ruby '2.6.4'
^
Gemfile:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
Gemfile:21:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
app.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require './models/init.rb'
^
app.rb:1:23: C: [Correctable] Style/RedundantFileExtensionInRequire: Redundant .rb file extension detected.
require './models/init.rb'
                      ^^^
app.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#This is the main class which determines the behavior of every path in our website
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:4:1: C: Metrics/ClassLength: Class has too many lines. [164/100]
class App < Sinatra::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:7:15: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
    set :views        , File.expand_path('../views', 'style.css')
              ^^^^^^^^
app.rb:8:14: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
    set :root         , File.dirname('../css/style.css')
             ^^^^^^^^^
app.rb:11:6: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
  it1=0
     ^
app.rb:12:6: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
  it2=1
     ^
app.rb:14:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #homepage
  ^^^^^^^^^
app.rb:19:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #starts the test by setting the iterators to their default values and passing the first two questions
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:20:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #WARNING: at least 2 questions needed for the test to work, and at least one outcome per question
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:21:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/start" do
      ^^^^^^^^
app.rb:23:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      it1=0
         ^
app.rb:24:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      it2=1
         ^
app.rb:25:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                       ^^^^^^^^^^
app.rb:25:35: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                  ^
app.rb:25:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                   ^^^^^^^^^^^^^
app.rb:25:64: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                                               ^^^^^^^
app.rb:25:77: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                                                            ^^^^^^^
app.rb:25:82: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                                                                 ^^
app.rb:25:87: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      erb :start_test, :locals => {:questions => Question.all, :it1 => it1, :it2 =>it2}
                                                                                      ^
app.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect "/"
               ^^^
app.rb:31:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #processes the current question.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:32:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #if it2 is smaller than questions.length, keeps on passing both the current question and the next question
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:33:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #if it2 is equal to questions.length, passes only the current question to the page that deals with the last element
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:34:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #if it2 is bigger than questions.length, redirects to the finish page with the test results
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:35:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/start/:id" do
      ^^^^^^^^^^^^
app.rb:36:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    questions=Question.all
             ^
app.rb:37:9: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    qlen=questions.length
        ^
app.rb:38:5: W: Lint/UselessAssignment: Useless assignment to variable - question1. Did you mean questions?
    question1=questions[it1]
    ^^^^^^^^^
app.rb:38:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    question1=questions[it1]
             ^
app.rb:40:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect "/finish"
               ^^^^^^^^^
app.rb:41:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator ==.
    elsif it2==qlen
             ^^
app.rb:42:29: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test_last, :locals => {:questions => questions, :it1 => it1}
                            ^^^^^^^^^^
app.rb:42:40: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      erb :start_test_last, :locals => {:questions => questions, :it1 => it1}
                                       ^
app.rb:42:41: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test_last, :locals => {:questions => questions, :it1 => it1}
                                        ^^^^^^^^^^^^^
app.rb:42:66: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test_last, :locals => {:questions => questions, :it1 => it1}
                                                                 ^^^^^^^
app.rb:42:77: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      erb :start_test_last, :locals => {:questions => questions, :it1 => it1}
                                                                            ^
app.rb:43:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator <.
    elsif it2<qlen
             ^
app.rb:44:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                       ^^^^^^^^^^
app.rb:44:35: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                  ^
app.rb:44:36: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                   ^^^^^^^^^^^^^
app.rb:44:61: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                                            ^^^^^^^
app.rb:44:74: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                                                         ^^^^^^^
app.rb:44:79: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                                                              ^^
app.rb:44:84: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      erb :start_test, :locals => {:questions => questions, :it1 => it1, :it2 =>it2}
                                                                                   ^
app.rb:48:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #finds and updates the value of a particular choice
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:49:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #it also increases the iterators, because this is done as part of the test-taking process
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:50:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #redirects to the next question in the test
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:51:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/choices/update" do
       ^^^^^^^^^^^^^^^^^
app.rb:53:5: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
    it1=it1+1
    ^^^^^^^^^
app.rb:53:8: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    it1=it1+1
       ^
app.rb:53:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    it1=it1+1
           ^
app.rb:54:5: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
    it2=it2+1
    ^^^^^^^^^
app.rb:54:8: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    it2=it2+1
       ^
app.rb:54:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    it2=it2+1
           ^
app.rb:58:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #finds and updates the value of the final choice, redirects to the finish page
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:59:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/choices/update/last" do
       ^^^^^^^^^^^^^^^^^^^^^^
app.rb:61:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    redirect "/finish"
             ^^^^^^^^^
app.rb:64:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #calculates how much every career fits a certain user
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:65:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/finish" do
      ^^^^^^^^^
app.rb:66:5: C: Naming/VariableName: Use snake_case for variable names.
    careerArray=Career.mapToCareerStruct
    ^^^^^^^^^^^
app.rb:66:16: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    careerArray=Career.mapToCareerStruct
               ^
app.rb:67:31: C: Naming/VariableName: Use snake_case for variable names.
    Outcome.setWeightedValues(careerArray)
                              ^^^^^^^^^^^
app.rb:68:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                 ^^^^^^^^^^
app.rb:68:29: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                            ^
app.rb:68:30: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                             ^^^^^^^^^^
app.rb:68:63: C: Naming/VariableName: Use snake_case for variable names.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                                                              ^^^^^^^^^^^
app.rb:68:77: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                                                                            ^^^^^^^^^^^
app.rb:68:89: C: Naming/VariableName: Use snake_case for variable names.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                                                                                        ^^^^^^^^^^^
app.rb:68:121: C: [Correctable] Layout/LineLength: Line is too long. [134/120]
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                                                                                                                        ^^^^^^^^^^^^^^
app.rb:68:132: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
    erb :finish, :locals => {:career => Career.bestCareerCalc(careerArray), :careers => careerArray.sort_by { |career| -career.acum} }
                                                                                                                                   ^
app.rb:71:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #creates a new survey with the given name and career_id parameter
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:72:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/surveys" do
       ^^^^^^^^^^
app.rb:73:44: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    survey = Survey.new(name: params[:name],career_id: params[:career_id])
                                           ^
app.rb:74:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #if saved, go back to homepage
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:76:7: W: Lint/Void: Literal [201, { 'Location' => "surveys/#{survey.survey_id}" }, 'Created'] used in void context.
      [201, { 'Location' => "surveys/#{survey.survey_id}" }, 'Created']
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:83:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows /surveys path
  ^^^^^^^^^^^^^^^^^^^^
app.rb:85:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    @surveys=Survey.all
            ^
app.rb:89:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #Se selecciona el rango y la carrera
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:92:8: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if (surveys != nil) 
       ^^^^^^^^^^^^^^^^
app.rb:92:9: C: [Correctable] Style/NonNilCheck: Prefer !surveys.nil? over surveys != nil.
    if (surveys != nil) 
        ^^^^^^^^^^^^^^
app.rb:92:24: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    if (surveys != nil) 
                       ^
app.rb:95:31: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                              ^^^^^^^^^^
app.rb:95:42: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                         ^
app.rb:95:43: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                          ^^^^^^^^^^^^^^
app.rb:95:103: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                                                                                      ^^^^^^^^^^^^^
app.rb:95:121: C: [Correctable] Layout/LineLength: Line is too long. [191/120]
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:95:141: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                                                                                                                            ^^^^^
app.rb:95:169: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                                                                                                                                                        ^^^^^^^^^^^
app.rb:95:191: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      erb :'surveys/setdate', :locals => {:first_date => (first_date.created_at).to_formatted_s(:db), :last_date => (last_date.created_at + 10000).to_formatted_s(:db), :careers => Career.all}
                                                                                                                                                                                              ^
app.rb:101:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #given a range of dates, returns the career count of the surveys in that range....
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:103:53: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    surveys = Survey.filterByDate(params[:startDate],params[:finishDate])
                                                    ^
app.rb:105:33: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                ^^^^^^^^^^
app.rb:105:44: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                           ^
app.rb:105:45: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                            ^^^^^^^^^^^
app.rb:105:66: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                                                 ^^^^^^^^^^
app.rb:105:121: C: [Correctable] Layout/LineLength: Line is too long. [121/120]
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                                                                                                        ^
app.rb:105:121: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    erb :'surveys/careercount', :locals => {:careers => careers, :career => Career.find(career_id: params[:career]).name}
                                                                                                                        ^
app.rb:108:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows the information of a particular survey
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:110:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
  survey = Survey.where(survey_id: params[:id]).last
  
app.rb:111:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                     ^^^^^^^^^^
app.rb:111:49: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                ^
app.rb:111:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                 ^^^^^^^^^^
app.rb:111:69: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                                    ^^^^^^^^^^
app.rb:111:121: C: [Correctable] Layout/LineLength: Line is too long. [168/120]
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:111:122: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                                                                                         ^^^^^^^^
app.rb:111:168: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  erb :'surveys/survey_description', :locals => {:survey => survey, :career => Career.find(career_id: survey.career_id), :date => survey.created_at.to_formatted_s(:db)}
                                                                                                                                                                       ^
app.rb:114:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #deletes a survey given its id
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:116:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Survey.where(:survey_id => params[:id]).delete
                 ^^^^^^^^^^^^^
app.rb:120:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #creates a new question given a description
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:121:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #NOTE: automatically creates and associates a choice to the new question
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:122:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/questions" do
       ^^^^^^^^^^^^
app.rb:124:5: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
    if !description.blank? ...
    ^^^^^^^^^^^^^^^^^^^^^^
app.rb:129:9: W: Lint/Void: Literal [201, { 'Location' => "questions/#{question.question_id}" }, 'Created'] used in void context.
        [201, { 'Location' => "questions/#{question.question_id}" }, 'Created']
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:138:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows all questions
  ^^^^^^^^^^^^^^^^^^^^
app.rb:140:38: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/question_index', :locals => {:questions => Question.all}
                                     ^^^^^^^^^^
app.rb:140:49: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'questions/question_index', :locals => {:questions => Question.all}
                                                ^
app.rb:140:50: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/question_index', :locals => {:questions => Question.all}
                                                 ^^^^^^^^^^^^^
app.rb:140:76: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    erb :'questions/question_index', :locals => {:questions => Question.all}
                                                                           ^
app.rb:143:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows an individual question description, along with redirecting to the outcome modifying page if needed
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:145:44: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/question_description', :locals => {:question => Question.where(question_id: params['id']).last}
                                           ^^^^^^^^^^
app.rb:145:55: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'questions/question_description', :locals => {:question => Question.where(question_id: params['id']).last}
                                                      ^
app.rb:145:56: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/question_description', :locals => {:question => Question.where(question_id: params['id']).last}
                                                       ^^^^^^^^^^^^
app.rb:145:115: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    erb :'questions/question_description', :locals => {:question => Question.where(question_id: params['id']).last}
                                                                                                                  ^
app.rb:148:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #deletes a question, once a question is deleted it also deletes the choice associated with it, and any outcomes
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:149:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #that said choice had associated
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:150:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/questions/:id/delete" do
       ^^^^^^^^^^^^^^^^^^^^^^^
app.rb:155:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #creates a new outcome given a choice id, career_id, and weight
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:156:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/outcomes/new" do
       ^^^^^^^^^^^^^^^
app.rb:159:5: C: [Correctable] Layout/SpaceAroundKeyword: Space after keyword if is missing.
    if(career_id != nil)
    ^^
app.rb:159:8: C: [Correctable] Style/NonNilCheck: Prefer !career_id.nil? over career_id != nil.
    if(career_id != nil)
       ^^^^^^^^^^^^^^^^
app.rb:162:9: W: Lint/Void: Literal [201, { 'Location' => "outcomes/#{outcome.outcome_id}" }, 'Created'] used in void context.
        [201, { 'Location' => "outcomes/#{outcome.outcome_id}" }, 'Created']
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:171:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows a particular outcome's information, along with delete and update weight functionalities
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:172:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/outcomes/:id" do
      ^^^^^^^^^^^^^^^
app.rb:173:52: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                   ^^^^^^^^^^
app.rb:173:63: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                              ^
app.rb:173:64: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                               ^^^^^^^^^^^
app.rb:173:83: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                                                  ^
app.rb:173:97: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                                                                ^^^^^^^^^^^^^^
app.rb:173:121: C: Layout/LineLength: Line is too long. [125/120]
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                                                                                        ^^^^^
app.rb:173:125: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    erb :'questions/outcomes/outcome_description', :locals => {:outcome => outcome=Outcome.find(:outcome_id => params[:id]), 
                                                                                                                            ^
app.rb:174:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:174:7: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
      ^^^^^^^^^^^^
app.rb:174:20: W: Lint/UselessAssignment: Useless assignment to variable - question.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
                   ^^^^^^^^
app.rb:174:28: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
                           ^
app.rb:174:43: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
                                          ^^^^^^^^^^^^^
app.rb:174:75: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      :question => question=Question.find(:choice_id => outcome.choice_id)}
                                                                          ^
app.rb:177:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #deletes an outcome
  ^^^^^^^^^^^^^^^^^^^
app.rb:178:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/outcomes/:id/delete" do
       ^^^^^^^^^^^^^^^^^^^^^^
app.rb:179:8: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    qid=Outcome.questionid(params[:id])
       ^
app.rb:180:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Outcome.where(:outcome_id => params[:id]).delete
                  ^^^^^^^^^^^^^^
app.rb:184:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #updates an outcome's weight
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:185:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/outcomes/:id" do
       ^^^^^^^^^^^^^^^
app.rb:186:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Outcome.find(:outcome_id => params['id']).update(weight: params[:weight])
                 ^^^^^^^^^^^^^^
app.rb:190:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows the outcomes associated to the choice that is associated to a question. Also has create outcome functionalities
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:191:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/questions/:id/outcomes" do
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:192:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    question=Question.where(question_id: params['id']).last
            ^
app.rb:193:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    choice=Choice.where(choice_id: question.choice_id).last
          ^
app.rb:194:47: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice, ...
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:194:47: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                              ^^^^^^^^^^
app.rb:194:55: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                      ^^
app.rb:194:57: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                        ^
app.rb:194:58: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                         ^^^^^^^^^^^^^^^^^^^^
app.rb:194:58: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                         ^^^^^^^^^^^^
app.rb:194:68: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                                   ^^
app.rb:194:80: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'questions/outcomes/outcomes_index', :locals =>{:question =>question, :choice => choice,
                                                                               ^^^^^^^^^^
app.rb:195:7: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
      :outcomes => Outcome.where(choice_id: choice.choice_id),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:195:7: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :outcomes => Outcome.where(choice_id: choice.choice_id),
      ^^^^^^^^^^^^
app.rb:196:8: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
       :careers => Career.all}
       ^^^^^^^^^^^^^^^^^^^^^^
app.rb:196:8: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
       :careers => Career.all}
       ^^^^^^^^^^^
app.rb:196:30: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
       :careers => Career.all}
                             ^
app.rb:199:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #creates a new career
  ^^^^^^^^^^^^^^^^^^^^^
app.rb:200:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/careers" do
       ^^^^^^^^^^
app.rb:201:5: W: Lint/UselessAssignment: Useless assignment to variable - careers. Did you mean career?
    careers=Career.all
    ^^^^^^^
app.rb:201:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    careers=Career.all
           ^
app.rb:202:5: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
    if !params['name'].blank? ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:205:9: W: Lint/Void: Literal [201, { 'Location' => "careers/#{career.id}" }, 'Created'] used in void context.
        [201, { 'Location' => "careers/#{career.id}" }, 'Created']
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:214:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #deletes a career
  ^^^^^^^^^^^^^^^^^
app.rb:215:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  post "/careers/:id/delete" do
       ^^^^^^^^^^^^^^^^^^^^^
app.rb:216:18: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Career.where(:career_id => params[:id]).delete
                 ^^^^^^^^^^^^^
app.rb:220:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows all careers
  ^^^^^^^^^^^^^^^^^^
app.rb:222:34: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'careers/career_index', :locals =>{:careers => Career.all}
                                 ^^^^^^^^^^
app.rb:222:42: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    erb :'careers/career_index', :locals =>{:careers => Career.all}
                                         ^^
app.rb:222:44: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'careers/career_index', :locals =>{:careers => Career.all}
                                           ^
app.rb:222:45: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'careers/career_index', :locals =>{:careers => Career.all}
                                            ^^^^^^^^^^^
app.rb:222:67: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    erb :'careers/career_index', :locals =>{:careers => Career.all}
                                                                  ^
app.rb:225:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #shows a particular career and includes a delete button
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app.rb:227:40: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'careers/career_description', :locals => {:career => Career.where(career_id: params['id']).last}
                                       ^^^^^^^^^^
app.rb:227:51: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    erb :'careers/career_description', :locals => {:career => Career.where(career_id: params['id']).last}
                                                  ^
app.rb:227:52: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    erb :'careers/career_description', :locals => {:career => Career.where(career_id: params['id']).last}
                                                   ^^^^^^^^^^
app.rb:227:105: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    erb :'careers/career_description', :locals => {:career => Career.where(career_id: params['id']).last}
                                                                                                        ^
app.rb:229:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "bundler"
^
config.ru:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler"
        ^^^^^^^^^
config.ru:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "sinatra"
        ^^^^^^^^^
config.ru:13:20: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument when opening brace is on a separate line from the first argument.
  password: 'magic')
                   ^
config.ru:19:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
db/migrations/000010_modifying_choice_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000010_modifying_choice_table.rb:5:6: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
     drop_column :text
     ^^^^^^^^^^^^^^^^^
db/migrations/000010_modifying_choice_table.rb:6:6: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
     add_foreign_key :survey_id, :surveys
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrations/000010_modifying_choice_table.rb:17:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000011_adding_integer_to_choice_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000011_adding_integer_to_choice_table.rb:3:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #alter_table(:choices) do
    ^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrations/000011_adding_integer_to_choice_table.rb:5:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #end
    ^^^^
db/migrations/000011_adding_integer_to_choice_table.rb:9:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #drop_column :value
    ^^^^^^^^^^^^^^^^^^^
db/migrations/000011_adding_integer_to_choice_table.rb:11:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000012_modifying_questions_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000012_modifying_questions_table.rb:4:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
     add_foreign_key :choice_id, :choices
    ^
db/migrations/000012_modifying_questions_table.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000013_adding_weight_to_outcomes_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000013_adding_weight_to_outcomes_table.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000014_removing_survey_from_choice_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000014_removing_survey_from_choice_table.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000015_removing_question_id_from_choices_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000015_removing_question_id_from_choices_table.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000016_removing_name_and_number_from_questions_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000016_removing_name_and_number_from_questions_table.rb:15:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000017_remove_everything_from_responses_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000017_remove_everything_from_responses_table.rb:17:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/000018_add_cascade_to_foreign_keys.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [32/25]
Sequel.migration do ...
^^^^^^^^^^^^^^^^^^^
db/migrations/000018_add_cascade_to_foreign_keys.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/000018_add_cascade_to_foreign_keys.rb:10:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        drop_foreign_key [:career_id], name: :surveys_career_id_fkey
    ^^^^
db/migrations/000018_add_cascade_to_foreign_keys.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        drop_foreign_key [:choice_id], name: :questions_choice_id_fkey
    ^^^^
db/migrations/000018_add_cascade_to_foreign_keys.rb:31:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        drop_foreign_key [:choice_id], name: :questions_choice_id_fkey
    ^^^^
db/migrations/000018_add_cascade_to_foreign_keys.rb:35:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/00001_create_posts_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00001_create_posts_table.rb:7:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 6).
  #    DateTime      :updated_at,   default: Sequel::CURRENT_TIMESTAMP
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrations/00002_add_date_fields_to_posts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00003_create_careers_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00004_create_questions_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00005_create_surveys_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00005_create_surveys_table.rb:4:18: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      primary_key   :survey_id
                 ^^
db/migrations/00005_create_surveys_table.rb:4:18: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
      primary_key   :survey_id
                 ^^^
db/migrations/00005_create_surveys_table.rb:5:13: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      String 	    :name
            ^^^^^
db/migrations/00005_create_surveys_table.rb:5:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
      String 	    :name
            ^^^^^^
db/migrations/00005_create_surveys_table.rb:6:47: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :career_id, :careers, null:true
                                              ^
db/migrations/00006_create_choices_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00006_create_choices_table.rb:6:51: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :question_id, :questions, null:true
                                                  ^
db/migrations/00006_create_choices_table.rb:15:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
db/migrations/00007_create_outcomes_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00007_create_outcomes_table.rb:5:47: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :career_id, :careers, null:true
                                              ^
db/migrations/00007_create_outcomes_table.rb:6:47: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :choice_id, :choices, null:true
                                              ^
db/migrations/00008_create_responses_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00008_create_responses_table.rb:5:49: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :survey_id,   :surveys, null:true
                                                ^
db/migrations/00008_create_responses_table.rb:6:49: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :choice_id,   :choices, null:true
                                                ^
db/migrations/00008_create_responses_table.rb:7:51: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
      foreign_key   :question_id, :questions, null:true
                                                  ^
db/migrations/00009_remove_type_from_questions.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
Sequel.migration do
^
db/migrations/00009_remove_type_from_questions.rb:4:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
     drop_column :type
    ^
models/career.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#This class includes possible careers that our test can return
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/career.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#This class includes possible careers that our test can return
^
models/career.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	one_to_many:surveys
^
models/career.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	one_to_many:surveys
^
models/career.rb:3:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	one_to_many:surveys
            
models/career.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	one_to_many:outcomes
^
models/career.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	one_to_many:outcomes
^
models/career.rb:4:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	one_to_many:outcomes
            
models/career.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#Given all the careers, maps them to an array of structures that have the career id, name, and an accumulator
^
models/career.rb:6:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#Given all the careers, maps them to an array of structures that have the career id, name, and an accumulator
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/career.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.mapToCareerStruct
^
models/career.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.mapToCareerStruct
^
models/career.rb:7:11: C: Naming/MethodName: Use snake_case for method names.
	def self.mapToCareerStruct
          ^^^^^^^^^^^^^^^^^
models/career.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		careerStruct=Struct.new(:career_id,:name,:acum)
^^
models/career.rb:8:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		careerStruct=Struct.new(:career_id,:name,:acum)
 ^
models/career.rb:8:3: C: Naming/VariableName: Use snake_case for variable names.
		careerStruct=Struct.new(:career_id,:name,:acum)
  ^^^^^^^^^^^^
models/career.rb:8:15: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		careerStruct=Struct.new(:career_id,:name,:acum)
              ^
models/career.rb:8:37: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
		careerStruct=Struct.new(:career_id,:name,:acum)
                                    ^
models/career.rb:8:43: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
		careerStruct=Struct.new(:career_id,:name,:acum)
                                          ^
models/career.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		careers=Career.all
^^
models/career.rb:9:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		careers=Career.all
         ^
models/career.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		careerArray=Array.new
^^
models/career.rb:10:3: C: Naming/VariableName: Use snake_case for variable names.
		careerArray=Array.new
  ^^^^^^^^^^^
models/career.rb:10:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		careerArray=Array.new
             ^
models/career.rb:10:15: C: [Correctable] Style/EmptyLiteral: Use array literal [] instead of Array.new.
		careerArray=Array.new
              ^^^^^^^^^
models/career.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		i=0
^^
models/career.rb:11:4: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		i=0
   ^
models/career.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		careers.each do |career|
^^
models/career.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
^^^^^^^^
models/career.rb:13:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
  ^^^^^^
models/career.rb:13:9: C: Naming/VariableName: Use snake_case for variable names.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
        ^^^^^^^^^^^
models/career.rb:13:23: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
                      ^
models/career.rb:13:24: C: Naming/VariableName: Use snake_case for variable names.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
                       ^^^^^^^^^^^^
models/career.rb:13:57: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
                                                        ^
models/career.rb:13:69: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
      		careerArray[i]=careerStruct.new(career.career_id,career.name,0)
                                                                    ^
models/career.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		i=i+1
^^^^^^^^
models/career.rb:14:9: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
      		i=i+1
        ^^^^^
models/career.rb:14:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      		i=i+1
         ^
models/career.rb:14:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
      		i=i+1
           ^
models/career.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	return careerArray
^^^^^^^
models/career.rb:16:8: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
      	return careerArray
       ^^^^^^^^^^^^^^^^^^
models/career.rb:16:8: C: [Correctable] Style/RedundantReturn: Redundant return detected.
      	return careerArray
       ^^^^^^
models/career.rb:16:15: C: Naming/VariableName: Use snake_case for variable names.
      	return careerArray
              ^^^^^^^^^^^
models/career.rb:17:5: W: [Correctable] Layout/DefEndAlignment: end at 17, 4 is not aligned with def at 7, 1.
    end
    ^^^
models/career.rb:19:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Given a careerArray with all its accumulators set, calculates which one has the highest acum value and returns the careerStruct
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/career.rb:19:121: C: Layout/LineLength: Line is too long. [132/120]
    #Given a careerArray with all its accumulators set, calculates which one has the highest acum value and returns the careerStruct
                                                                                                                        ^^^^^^^^^^^^
models/career.rb:20:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def self.bestCareerCalc(carray)
^^^^
models/career.rb:20:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def self.bestCareerCalc(carray) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/career.rb:20:5: C: Metrics/MethodLength: Method has too many lines. [11/10]
    def self.bestCareerCalc(carray) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/career.rb:20:14: C: Naming/MethodName: Use snake_case for method names.
    def self.bestCareerCalc(carray)
             ^^^^^^^^^^^^^^
models/career.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	max=0
^^^^^
models/career.rb:21:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    	max=0
    ^
models/career.rb:21:9: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    	max=0
        ^
models/career.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	careerid=0
^^^^^
models/career.rb:22:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    	careerid=0
             ^
models/career.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	finalcareer=carray[0]
^^^^^
models/career.rb:23:17: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    	finalcareer=carray[0]
                ^
models/career.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	carray.each do |k|
^^^^^
models/career.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		if k.acum>=max
^^^^^^^^
models/career.rb:25:6: C: [Correctable] Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
      		if k.acum>=max
     ^^^
models/career.rb:25:9: C: [Correctable] Style/Next: Use next to skip iteration.
      		if k.acum>=max
        ^^^^^^^^^^^^^^
models/career.rb:25:18: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >=.
      		if k.acum>=max
                 ^^
models/career.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		max=k.acum
^^^^^^^^^^
models/career.rb:26:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        		max=k.acum
             ^
models/career.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		careerid=k.career_id
^^^^^^^^^^
models/career.rb:27:19: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        		careerid=k.career_id
                  ^
models/career.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		finalcareer=k
^^^^^^^^^^
models/career.rb:28:22: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        		finalcareer=k
                     ^
models/career.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
     		end
^^^^^^^
models/career.rb:29:8: W: [Correctable] Layout/EndAlignment: end at 29, 7 is not aligned with if at 25, 8.
     		end
       ^^^
models/career.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	end
^^^^^
models/career.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	return finalcareer
^^^^^
models/career.rb:31:6: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    	return finalcareer
     ^^^^^^
models/career.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def validate
^
models/career.rb:34:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def validate
^
models/career.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  super 
^
models/career.rb:35:9: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	  super 
        ^
models/career.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  errors.add(:name, 'cannot be empty') if !name || name.empty?
^
models/career.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end  
^
models/career.rb:37:5: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	end  
    ^^
models/choice.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Choice is a class that will be used to record what the user answer to the question is
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/choice.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#Choice is a class that will be used to record what the user answer to the question is
^
models/choice.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	one_to_one:questions #in sequel, to setup a one to one relation, its needed to list it as many_to_one in the table that has the foreign key
^
models/choice.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	one_to_one:questions #in sequel, to setup a one to one relation, its needed to list it as many_to_one in the table that has the foreign key
^
models/choice.rb:3:12: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	one_to_one:questions #in sequel, to setup a one to one relation, its needed to list it as many_to_one in the table that has the foreign key
           
models/choice.rb:3:23: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	one_to_one:questions #in sequel, to setup a one to one relation, its needed to list it as many_to_one in the table that has the foreign key
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/choice.rb:3:120: C: Layout/LineLength: Line is too long. [141/120]
	one_to_one:questions #in sequel, to setup a one to one relation, its needed to list it as many_to_one in the table that has the foreign key ...
                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^
models/choice.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	one_to_many:outcomes
^
models/choice.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	one_to_many:outcomes
^
models/choice.rb:4:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	one_to_many:outcomes
            
models/choice.rb:6:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
models/init.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative 'post'
^
models/init.rb:8:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
models/outcome.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#The class outcome will tell us how much a question influences a certain career result
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#The class outcome will tell us how much a question influences a certain career result
^
models/outcome.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:choices
^
models/outcome.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:choices
^
models/outcome.rb:3:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:choices
            
models/outcome.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:careers
^
models/outcome.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:careers
^
models/outcome.rb:4:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:careers
            
models/outcome.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#returns the question id of the question an outcome is associated to through choice, given the outcome id
^
models/outcome.rb:6:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#returns the question id of the question an outcome is associated to through choice, given the outcome id
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.questionid(oid)
^
models/outcome.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.questionid(oid)
^
models/outcome.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		outcome=Outcome.find(:outcome_id => oid)
^^
models/outcome.rb:8:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		outcome=Outcome.find(:outcome_id => oid)
 ^
models/outcome.rb:8:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		outcome=Outcome.find(:outcome_id => oid)
         ^
models/outcome.rb:8:24: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
		outcome=Outcome.find(:outcome_id => oid)
                       ^^^^^^^^^^^^^^
models/outcome.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	question=Question.find(:choice_id => outcome.choice_id)
^^^^^
models/outcome.rb:9:6: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    	question=Question.find(:choice_id => outcome.choice_id)
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:9:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    	question=Question.find(:choice_id => outcome.choice_id)
             ^
models/outcome.rb:9:29: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    	question=Question.find(:choice_id => outcome.choice_id)
                            ^^^^^^^^^^^^^
models/outcome.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
    	return question.question_id
^^^^^
models/outcome.rb:10:6: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    	return question.question_id
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:10:6: C: [Correctable] Style/RedundantReturn: Redundant return detected.
    	return question.question_id
     ^^^^^^
models/outcome.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
models/outcome.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#Given an array of career ids and accumulators for each career, 
^
models/outcome.rb:13:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#Given an array of career ids and accumulators for each career, 
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:13:65: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	#Given an array of career ids and accumulators for each career, 
                                                                ^
models/outcome.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#iterates over all outcomes, and for every career that is associated with that outcome
^
models/outcome.rb:14:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#iterates over all outcomes, and for every career that is associated with that outcome
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#multiplies the user-selected choice value by the outcome weight, then adds it to the
^
models/outcome.rb:15:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#multiplies the user-selected choice value by the outcome weight, then adds it to the
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#respective career's accumulator
^
models/outcome.rb:16:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#respective career's accumulator
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.setWeightedValues(cArray)
^
models/outcome.rb:17:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.setWeightedValues(cArray)
^
models/outcome.rb:17:11: C: Naming/MethodName: Use snake_case for method names.
	def self.setWeightedValues(cArray)
          ^^^^^^^^^^^^^^^^^
models/outcome.rb:17:29: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
	def self.setWeightedValues(cArray)
                            ^^^^^^
models/outcome.rb:17:29: C: Naming/VariableName: Use snake_case for variable names.
	def self.setWeightedValues(cArray)
                            ^^^^^^
models/outcome.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		outcomes=Outcome.all
^^
models/outcome.rb:18:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		outcomes=Outcome.all
 ^
models/outcome.rb:18:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		outcomes=Outcome.all
          ^
models/outcome.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		outcomes.map do |outcome|
^^
models/outcome.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		cArray.each do |k|
^^^^^^^^
models/outcome.rb:20:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      		cArray.each do |k|
  ^^^^^^
models/outcome.rb:20:9: C: Naming/VariableName: Use snake_case for variable names.
      		cArray.each do |k|
        ^^^^^^
models/outcome.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		if k.career_id == outcome.career_id
^^^^^^^^^^
models/outcome.rb:21:11: C: [Correctable] Style/Next: Use next to skip iteration.
        		if k.career_id == outcome.career_id
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        			choice=Choice.find(choice_id: outcome.choice_id)
^^^^^^^^^^^
models/outcome.rb:22:11: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
        			choice=Choice.find(choice_id: outcome.choice_id)
          ^
models/outcome.rb:22:18: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
        			choice=Choice.find(choice_id: outcome.choice_id)
                 ^
models/outcome.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
     				curr=outcome.weight * choice.value
^^^^^^^^^
models/outcome.rb:23:10: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
     				curr=outcome.weight * choice.value
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/outcome.rb:23:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
     				curr=outcome.weight * choice.value
             ^
models/outcome.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
          			k.acum+=curr
^^^^^^^^^^^^^
models/outcome.rb:24:14: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
          			k.acum+=curr
             ^^^^^^^^^^^^
models/outcome.rb:24:20: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +=.
          			k.acum+=curr
                   ^^
models/outcome.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
        		end
^^^^^^^^^^
models/outcome.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		end
^^^^^^^^
models/outcome.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
models/outcome.rb:29:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
models/post.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Not used
^
models/question.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#The class question includes the questions of our test that need to be answered
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/question.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#The class question includes the questions of our test that need to be answered
^
models/question.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:choices
^
models/question.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:choices
^
models/question.rb:3:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:choices
            
models/question.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#this function checks that theres at least 2 questions, and that they're each associated to at least one career through an outcome
^
models/question.rb:5:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#this function checks that theres at least 2 questions, and that they're each associated to at least one career through an outcome
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/question.rb:5:120: C: Layout/LineLength: Line is too long. [132/120]
	#this function checks that theres at least 2 questions, and that they're each associated to at least one career through an outcome ...
                                                                                                                       ^^^^^^^^^^^^
models/question.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.first_two
^
models/question.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.first_two
^
models/question.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	question=Question.first(2)
^^^^^^^
models/question.rb:7:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      	question=Question.first(2)
 ^^^^^^
models/question.rb:7:16: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      	question=Question.first(2)
               ^
models/question.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	return false if question.length < 2
^^^^^^^
models/question.rb:8:8: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      	return false if question.length < 2
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/question.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	check=true
^^^^^^^
models/question.rb:9:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      	check=true
            ^
models/question.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	question.each do |q| 
^^^^^^^
models/question.rb:10:28: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
      	question.each do |q| 
                           ^
models/question.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		outcomes=Outcome.where(choice_id: q.choice_id)
^^^^^^^^
models/question.rb:11:8: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
      		outcomes=Outcome.where(choice_id: q.choice_id)
       ^
models/question.rb:11:17: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      		outcomes=Outcome.where(choice_id: q.choice_id)
                ^
models/question.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		l=outcomes.count
^^^^^^^^
models/question.rb:12:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      		l=outcomes.count
         ^
models/question.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      		check = check && l>0
^^^^^^^^
models/question.rb:13:9: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand &&=.
      		check = check && l>0
        ^^^^^^^^^^^^^^^^^^^^
models/question.rb:13:26: C: [Correctable] Style/NumericPredicate: Use l.positive? instead of l>0.
      		check = check && l>0
                         ^^^
models/question.rb:13:27: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >.
      		check = check && l>0
                          ^
models/question.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	end
^^^^^^^
models/question.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
      	check
^^^^^^^
models/question.rb:16:5: W: [Correctable] Layout/DefEndAlignment: end at 16, 4 is not aligned with def at 6, 1.
    end 
    ^^^
models/question.rb:16:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    end 
       ^
models/question.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   	#deletes a question and its associated choice given the question id
^^^^
models/question.rb:18:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
   	#deletes a question and its associated choice given the question id
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/question.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   	def self.deleteq(qid)
^^^^
models/question.rb:19:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
   	def self.deleteq(qid)
^^^^
models/question.rb:19:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
   	def self.deleteq(qid) ...
    ^^^^^^^^^^^^^^^^^^^^^
models/question.rb:20:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   		question=Question.find(question_id: qid)
^^^^^
models/question.rb:20:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
   		question=Question.find(question_id: qid)
    ^
models/question.rb:20:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
   		question=Question.find(question_id: qid)
             ^
models/question.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   		Choice.where(:choice_id => question.choice_id).delete
^^^^^
models/question.rb:21:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
   		Choice.where(:choice_id => question.choice_id).delete
                  ^^^^^^^^^^^^^
models/question.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   		Question.where(:question_id => qid).delete
^^^^^
models/question.rb:22:21: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
   		Question.where(:question_id => qid).delete
                    ^^^^^^^^^^^^^^^
models/question.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def validate
^
models/question.rb:25:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def validate
^
models/question.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		super
^^
models/question.rb:26:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		super
 ^
models/question.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		errors.add(:description, 'cannot be empty') if !description || description.empty?
^^
models/question.rb:28:5: W: [Correctable] Layout/DefEndAlignment: end at 28, 4 is not aligned with def at 25, 1.
    end
    ^^^
models/response.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Not used
^
models/response.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:choices
^
models/response.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:choices
^
models/response.rb:3:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:choices
            
models/response.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:questions
^
models/response.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:questions
^
models/response.rb:4:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:questions
            
models/response.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:surveys
^
models/response.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:surveys
^
models/response.rb:5:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:surveys
            
models/survey.rb:1:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#The survey class records what result a certain person got for the test in what date
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#The survey class records what result a certain person got for the test in what date
^
models/survey.rb:3:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	many_to_one:careers
^
models/survey.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	many_to_one:careers
^
models/survey.rb:3:13: C: [Correctable] Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
	many_to_one:careers
            
models/survey.rb:4:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
models/survey.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
models/survey.rb:5:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.filterByDate(startDate, finishDate)
^
models/survey.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.filterByDate(startDate, finishDate)
^
models/survey.rb:5:2: C: Metrics/AbcSize: Assignment Branch Condition size for filterByDate is too high. [<7, 16, 7> 18.81/17]
	def self.filterByDate(startDate, finishDate) ...
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:5:2: C: Metrics/MethodLength: Method has too many lines. [13/10]
	def self.filterByDate(startDate, finishDate) ...
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:5:11: C: Naming/MethodName: Use snake_case for method names.
	def self.filterByDate(startDate, finishDate)
          ^^^^^^^^^^^^
models/survey.rb:5:24: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
	def self.filterByDate(startDate, finishDate)
                       ^^^^^^^^^
models/survey.rb:5:24: C: Naming/VariableName: Use snake_case for variable names.
	def self.filterByDate(startDate, finishDate)
                       ^^^^^^^^^
models/survey.rb:5:35: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
	def self.filterByDate(startDate, finishDate)
                                  ^^^^^^^^^^
models/survey.rb:5:35: C: Naming/VariableName: Use snake_case for variable names.
	def self.filterByDate(startDate, finishDate)
                                  ^^^^^^^^^^
models/survey.rb:6:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		 surveyStruct = Struct.new(:career_id, :survey_id)
^^
models/survey.rb:6:4: C: Naming/VariableName: Use snake_case for variable names.
		 surveyStruct = Struct.new(:career_id, :survey_id)
   ^^^^^^^^^^^^
models/survey.rb:7:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		 surveys = Survey.all
^^
models/survey.rb:8:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		 surveyArray = Array.new
^^
models/survey.rb:8:4: C: Naming/VariableName: Use snake_case for variable names.
		 surveyArray = Array.new
   ^^^^^^^^^^^
models/survey.rb:8:18: C: [Correctable] Style/EmptyLiteral: Use array literal [] instead of Array.new.
		 surveyArray = Array.new
                 ^^^^^^^^^
models/survey.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		 i = 0
^^
models/survey.rb:10:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		 surveys.each do |survey|
^^
models/survey.rb:11:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
^^^
models/survey.rb:11:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
  ^
models/survey.rb:11:4: C: [Correctable] Style/Next: Use next to skip iteration.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:11:7: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:11:23: C: Naming/VariableName: Use snake_case for variable names.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
                      ^^^^^^^^^
models/survey.rb:11:51: C: Naming/VariableName: Use snake_case for variable names.
			if (DateTime.parse(startDate) < DateTime.parse(finishDate))
                                                  ^^^^^^^^^^
models/survey.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
^^^^
models/survey.rb:12:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
   ^
models/survey.rb:12:5: C: [Correctable] Style/SoleNestedConditional: Consider merging nested conditions into outer if conditions.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
    ^^
models/survey.rb:12:8: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:12:45: C: Naming/VariableName: Use snake_case for variable names.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
                                            ^^^^^^^^^
models/survey.rb:12:95: C: Naming/VariableName: Use snake_case for variable names.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
                                                                                              ^^^^^^^^^^
models/survey.rb:12:117: C: [Correctable] Layout/LineLength: Line is too long. [144/120]
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59)) ...
                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:12:136: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
				if (survey.created_at >= DateTime.parse(startDate) && survey.created_at <= DateTime.parse(finishDate).change(hour: 23, min: 59, sec:59))
                                                                                                                                       ^
models/survey.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
					surveyArray[i] = surveyStruct.new(survey.career_id, survey.survey_id)
^^^^^
models/survey.rb:13:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
					surveyArray[i] = surveyStruct.new(survey.career_id, survey.survey_id)
    ^
models/survey.rb:13:6: C: Naming/VariableName: Use snake_case for variable names.
					surveyArray[i] = surveyStruct.new(survey.career_id, survey.survey_id)
     ^^^^^^^^^^^
models/survey.rb:13:23: C: Naming/VariableName: Use snake_case for variable names.
					surveyArray[i] = surveyStruct.new(survey.career_id, survey.survey_id)
                      ^^^^^^^^^^^^
models/survey.rb:14:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
					i=i+1
^^^^^
models/survey.rb:14:6: C: [Correctable] Style/SelfAssignment: Use self-assignment shorthand +=.
					i=i+1
     ^^^^^
models/survey.rb:14:7: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
					i=i+1
      ^
models/survey.rb:14:9: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
					i=i+1
        ^
models/survey.rb:15:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				end
^^^^
models/survey.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
models/survey.rb:17:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
models/survey.rb:17:3: C: [Correctable] Layout/BlockAlignment: end at 17, 2 is not aligned with surveys.each do |survey| at 10, 3.
		end
  ^^^
models/survey.rb:18:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		return surveyArray
^^
models/survey.rb:18:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
		return surveyArray
  ^^^^^^^^^^^^^^^^^^
models/survey.rb:18:3: C: [Correctable] Style/RedundantReturn: Redundant return detected.
		return surveyArray
  ^^^^^^
models/survey.rb:18:10: C: Naming/VariableName: Use snake_case for variable names.
		return surveyArray
         ^^^^^^^^^^^
models/survey.rb:19:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
models/survey.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	#this function returns a structure of careers and an accumulator representing the survey count of said careers
^
models/survey.rb:21:2: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
	#this function returns a structure of careers and an accumulator representing the survey count of said careers
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:22:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def self.careerCount(surveys)
^
models/survey.rb:22:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def self.careerCount(surveys)
^
models/survey.rb:22:11: C: Naming/MethodName: Use snake_case for method names.
	def self.careerCount(surveys)
          ^^^^^^^^^^^
models/survey.rb:23:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		careers=Career.mapToCareerStruct
^^
models/survey.rb:23:2: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		careers=Career.mapToCareerStruct
 ^
models/survey.rb:23:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		careers=Career.mapToCareerStruct
         ^
models/survey.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		surveys.each do |s|
^^
models/survey.rb:25:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			careers.each do |c|
^^^
models/survey.rb:25:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			careers.each do |c|
  ^
models/survey.rb:26:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				if (s.career_id == c.career_id)
^^^^
models/survey.rb:26:4: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
				if (s.career_id == c.career_id)
   ^
models/survey.rb:26:5: C: [Correctable] Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
				if (s.career_id == c.career_id)
    ^^
models/survey.rb:26:8: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
				if (s.career_id == c.career_id)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
models/survey.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
					c.acum=c.acum+1
^^^^^
models/survey.rb:27:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
					c.acum=c.acum+1
    ^
models/survey.rb:27:12: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
					c.acum=c.acum+1
           ^
models/survey.rb:27:19: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator +.
					c.acum=c.acum+1
                  ^
models/survey.rb:28:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
				end
^^^^
models/survey.rb:29:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
			end
^^^
models/survey.rb:30:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		end
^^
models/survey.rb:31:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		return careers
^^
models/survey.rb:31:3: C: [Correctable] Style/RedundantReturn: Redundant return detected.
		return careers
  ^^^^^^
models/survey.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end
^
models/survey.rb:33:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
models/survey.rb:33:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
models/survey.rb:34:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	def validate
^
models/survey.rb:34:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def validate
^
models/survey.rb:35:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  super 
^
models/survey.rb:35:9: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	  super 
        ^
models/survey.rb:36:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	  errors.add(:name, 'cannot be empty') if !name || name.empty?
^
models/survey.rb:37:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
	end  
^
models/survey.rb:37:5: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
	end  
    ^^
models/survey.rb:38:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
tests/models/careers_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/careers_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/careers_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine careers is working properly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/careers_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/careers_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/careers_test.rb:6:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_career_has_many_surveys ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/careers_test.rb:7:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/careers_test.rb:10:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/careers_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/careers_test.rb:19:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_career_has_many_outcomes ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/careers_test.rb:20:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/careers_test.rb:23:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/careers_test.rb:28:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/careers_test.rb:32:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_career_has_name ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/careers_test.rb:33:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/careers_test.rb:36:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/careers_test.rb:39:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/careers_test.rb:43:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_career_name_is_not_null ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/careers_test.rb:44:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/careers_test.rb:47:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/careers_test.rb:50:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/choices_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/choices_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/choices_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine choices is working properly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/choices_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/choices_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/choices_test.rb:7:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_choice_has_many_outcomes ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/choices_test.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/choices_test.rb:9:27: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    choice = Choice.create()
                          ^^
tests/models/choices_test.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/choices_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/outcomes_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/outcomes_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/outcomes_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine outcomes is working properly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/outcomes_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/outcomes_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/outcomes_test.rb:7:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_outcome_has_one_career ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/outcomes_test.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/outcomes_test.rb:9:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    career=Career.create(name: 'C1')
          ^
tests/models/outcomes_test.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/outcomes_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/outcomes_test.rb:19:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_outcome_has_one_choice ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/outcomes_test.rb:20:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/outcomes_test.rb:21:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    choice=Choice.create()
          ^
tests/models/outcomes_test.rb:21:25: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    choice=Choice.create()
                        ^^
tests/models/outcomes_test.rb:23:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/outcomes_test.rb:27:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/questions_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/questions_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/questions_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine questions is working properly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/questions_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/questions_test.rb:7:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_question_has_one_choice ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:8:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 3).
    #Arrange
    ^^^^^^^^
tests/models/questions_test.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/questions_test.rb:9:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
  	choice=Choice.create()
^^^
tests/models/questions_test.rb:9:3: C: [Correctable] Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	choice=Choice.create()
  ^
tests/models/questions_test.rb:9:4: W: Lint/UselessAssignment: Useless assignment to variable - choice.
  	choice=Choice.create()
   ^^^^^^
tests/models/questions_test.rb:9:10: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
  	choice=Choice.create()
         ^
tests/models/questions_test.rb:9:24: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
  	choice=Choice.create()
                       ^^
tests/models/questions_test.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/questions_test.rb:12:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   	question1=Question.create(description: 'a')
^^^^
tests/models/questions_test.rb:12:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   	question1=Question.create(description: 'a')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:12:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
   	question1=Question.create(description: 'a')
             ^
tests/models/questions_test.rb:13:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   	question2=Question.create(description: 'b')
^^^^
tests/models/questions_test.rb:13:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   	question2=Question.create(description: 'b')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:13:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
   	question2=Question.create(description: 'b')
             ^
tests/models/questions_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/questions_test.rb:16:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
   	assert_equal (question1.choice_id == question2.choice_id), true
^^^^
tests/models/questions_test.rb:16:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   	assert_equal (question1.choice_id == question2.choice_id), true
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:19:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_question_description_is_not_null ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:20:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/questions_test.rb:23:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/questions_test.rb:26:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/questions_test.rb:30:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_question_description_is_not_empty ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/questions_test.rb:31:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/questions_test.rb:34:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/questions_test.rb:37:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/responses_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/responses_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/responses_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine response is working properly (Not needed)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/responses_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/responses_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/responses_test.rb:7:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_response_has_one_choice ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/responses_test.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/responses_test.rb:9:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    choice=Choice.create(text: 'a')
          ^
tests/models/responses_test.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/responses_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/responses_test.rb:19:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_response_has_one_question ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/responses_test.rb:20:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/responses_test.rb:21:13: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    question=Question.create(name: 'Q1', description: "asd", number: 3, type: "asdasg")
            ^
tests/models/responses_test.rb:21:55: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    question=Question.create(name: 'Q1', description: "asd", number: 3, type: "asdasg")
                                                      ^^^^^
tests/models/responses_test.rb:21:79: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    question=Question.create(name: 'Q1', description: "asd", number: 3, type: "asdasg")
                                                                              ^^^^^^^^
tests/models/responses_test.rb:23:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/responses_test.rb:27:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/responses_test.rb:31:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_response_has_one_survey ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/responses_test.rb:32:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/responses_test.rb:33:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    survey=Survey.create(name: 'S1')
          ^
tests/models/responses_test.rb:35:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/responses_test.rb:39:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/surveys_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require File.expand_path '../../test_helper.rb', __FILE__
^
tests/models/surveys_test.rb:1:14: C: [Correctable] Style/ExpandPathArguments: Use expand_path('../test_helper.rb', __dir__) instead of expand_path('../../test_helper.rb', __FILE__).
require File.expand_path '../../test_helper.rb', __FILE__
             ^^^^^^^^^^^
tests/models/surveys_test.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#Test to determine surveys is working properly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/surveys_test.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
MiniTest::Unit::TestCase

tests/models/surveys_test.rb:5:17: W: Lint/Void: Variable TestCase used in void context.
MiniTest::Unit::TestCase
                ^^^^^^^^
tests/models/surveys_test.rb:7:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_survey_has_one_career ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/surveys_test.rb:8:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Arrange
    ^^^^^^^^
tests/models/surveys_test.rb:9:11: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    career=Career.create(name: 'C1')
          ^
tests/models/surveys_test.rb:11:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/surveys_test.rb:15:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/surveys_test.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
tests/models/surveys_test.rb:20:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_survey_has_name ...
  ^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/surveys_test.rb:21:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#Arrange
^^
tests/models/surveys_test.rb:21:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
		#Arrange
  ^^^^^^^^
tests/models/surveys_test.rb:21:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#Arrange
  ^^^^^^^^
tests/models/surveys_test.rb:24:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#Act
^^
tests/models/surveys_test.rb:24:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
		#Act
  ^^^^
tests/models/surveys_test.rb:24:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#Act
  ^^^^
tests/models/surveys_test.rb:27:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#Assert
^^
tests/models/surveys_test.rb:27:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
		#Assert
  ^^^^^^^
tests/models/surveys_test.rb:27:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#Assert
  ^^^^^^^
tests/models/surveys_test.rb:31:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  def test_survey_name_is_not_null ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/models/surveys_test.rb:32:1: C: [Correctable] Layout/IndentationStyle: Tab detected in indentation.
		#Arrange
^^
tests/models/surveys_test.rb:32:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 4).
		#Arrange
  ^^^^^^^^
tests/models/surveys_test.rb:32:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
		#Arrange
  ^^^^^^^^
tests/models/surveys_test.rb:35:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Act
    ^^^^
tests/models/surveys_test.rb:38:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #Assert
    ^^^^^^^
tests/models/surveys_test.rb:41:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
tests/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Configurar el test helper para conectarse a la DB de Test
^
tests/test_helper.rb:2:23: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
# tests/test_helper.rb 
                      ^
tests/test_helper.rb:10:4: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than the start of the previous line.
   adapter: 'postgres', ...
   ^^^^^^^^^^^^^^^^^^^^
tests/test_helper.rb:14:21: C: [Correctable] Layout/MultilineMethodCallBraceLayout: Closing method call brace must be on the line after the last argument when opening brace is on a separate line from the first argument.
   password: 'magic')
                    ^
tests/test_helper.rb:16:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Minitest::HooksSpec
      ^^^^^^^^^^^^^^^^^^^
tests/test_helper.rb:18:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                   ^^^^^^^^^^^
tests/test_helper.rb:18:29: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                            ^^
tests/test_helper.rb:18:40: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                                       ^^^^^^^^^^^^^^^^^
tests/test_helper.rb:18:55: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                                                      ^^
tests/test_helper.rb:18:62: C: [Correctable] Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                                                             ^
tests/test_helper.rb:18:63: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                                                              ^
tests/test_helper.rb:18:68: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
    DB.transaction(:rollback=>:always, :auto_savepoint=>true){super}
                                                                   ^

36 files inspected, 696 offenses detected, 640 offenses auto-correctable
